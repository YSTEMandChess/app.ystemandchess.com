/**
 * @fileoverview added by tsickle
 * Generated from: lib/data/models/remote-video-stats.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Video statistics of the remote stream.
 * @record
 */
export function RemoteVideoStats() { }
if (false) {
    /**
     * End-to-end delay in ms.
     *
     * Delay from capturing to playing the video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.End2EndDelay;
    /**
     * Whether the video is muted or not.
     *
     * - "1": Muted.
     * - "0": Unmuted.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.MuteState;
    /**
     * Packet loss rate (%) of the remote video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.PacketLossRate;
    /**
     * Bitrate of the received video, in Kbps.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvBitrate;
    /**
     * Resolution height of the received video, in pixels.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvResolutionHeight;
    /**
     * Resolution width of the received video, in pixels.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvResolutionWidth;
    /**
     * Rendering frame rate of the decoded video, in fps.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderFrameRate;
    /**
     * Height (pixels) of the rendered video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderResolutionHeight;
    /**
     * Width (pixels) of the rendered video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderResolutionWidth;
    /**
     * Total freeze time of the received video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TotalFreezeTime;
    /**
     * Total playing duration of the received video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TotalPlayDuration;
    /**
     * Transport delay in ms.
     *
     * Delay from sending to receiving the video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TransportDelay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLXZpZGVvLXN0YXRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFnb3JhLyIsInNvdXJjZXMiOlsibGliL2RhdGEvbW9kZWxzL3JlbW90ZS12aWRlby1zdGF0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHQSxzQ0FzQ0M7Ozs7Ozs7O0lBaENDLHdDQUFzQjs7Ozs7Ozs7SUFPdEIscUNBQW1COzs7OztJQUVuQiwwQ0FBd0I7Ozs7O0lBRXhCLHVDQUFxQjs7Ozs7SUFFckIsZ0RBQThCOzs7OztJQUU5QiwrQ0FBNkI7Ozs7O0lBRTdCLDJDQUF5Qjs7Ozs7SUFFekIsa0RBQWdDOzs7OztJQUVoQyxpREFBK0I7Ozs7O0lBRS9CLDJDQUF5Qjs7Ozs7SUFFekIsNkNBQTJCOzs7Ozs7O0lBTTNCLDBDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVmlkZW8gc3RhdGlzdGljcyBvZiB0aGUgcmVtb3RlIHN0cmVhbS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZW1vdGVWaWRlb1N0YXRzIHtcbiAgLyoqXG4gICAqIEVuZC10by1lbmQgZGVsYXkgaW4gbXMuXG4gICAqXG4gICAqIERlbGF5IGZyb20gY2FwdHVyaW5nIHRvIHBsYXlpbmcgdGhlIHZpZGVvLlxuICAgKi9cbiAgRW5kMkVuZERlbGF5Pzogc3RyaW5nO1xuICAvKipcbiAgICogV2hldGhlciB0aGUgdmlkZW8gaXMgbXV0ZWQgb3Igbm90LlxuICAgKlxuICAgKiAtIFwiMVwiOiBNdXRlZC5cbiAgICogLSBcIjBcIjogVW5tdXRlZC5cbiAgICovXG4gIE11dGVTdGF0ZT86IHN0cmluZztcbiAgLyoqIFBhY2tldCBsb3NzIHJhdGUgKCUpIG9mIHRoZSByZW1vdGUgdmlkZW8uICovXG4gIFBhY2tldExvc3NSYXRlPzogc3RyaW5nO1xuICAvKiogQml0cmF0ZSBvZiB0aGUgcmVjZWl2ZWQgdmlkZW8sIGluIEticHMuICovXG4gIFJlY3ZCaXRyYXRlPzogc3RyaW5nO1xuICAvKiogUmVzb2x1dGlvbiBoZWlnaHQgb2YgdGhlIHJlY2VpdmVkIHZpZGVvLCBpbiBwaXhlbHMuICovXG4gIFJlY3ZSZXNvbHV0aW9uSGVpZ2h0Pzogc3RyaW5nO1xuICAvKiogUmVzb2x1dGlvbiB3aWR0aCBvZiB0aGUgcmVjZWl2ZWQgdmlkZW8sIGluIHBpeGVscy4gKi9cbiAgUmVjdlJlc29sdXRpb25XaWR0aD86IHN0cmluZztcbiAgLyoqIFJlbmRlcmluZyBmcmFtZSByYXRlIG9mIHRoZSBkZWNvZGVkIHZpZGVvLCBpbiBmcHMuICovXG4gIFJlbmRlckZyYW1lUmF0ZT86IHN0cmluZztcbiAgLyoqIEhlaWdodCAocGl4ZWxzKSBvZiB0aGUgcmVuZGVyZWQgdmlkZW8uICovXG4gIFJlbmRlclJlc29sdXRpb25IZWlnaHQ/OiBzdHJpbmc7XG4gIC8qKiBXaWR0aCAocGl4ZWxzKSBvZiB0aGUgcmVuZGVyZWQgdmlkZW8uICovXG4gIFJlbmRlclJlc29sdXRpb25XaWR0aD86IHN0cmluZztcbiAgLyoqIFRvdGFsIGZyZWV6ZSB0aW1lIG9mIHRoZSByZWNlaXZlZCB2aWRlby4gKi9cbiAgVG90YWxGcmVlemVUaW1lPzogc3RyaW5nO1xuICAvKiogVG90YWwgcGxheWluZyBkdXJhdGlvbiBvZiB0aGUgcmVjZWl2ZWQgdmlkZW8uICovXG4gIFRvdGFsUGxheUR1cmF0aW9uPzogc3RyaW5nO1xuICAvKipcbiAgICogVHJhbnNwb3J0IGRlbGF5IGluIG1zLlxuICAgKlxuICAgKiBEZWxheSBmcm9tIHNlbmRpbmcgdG8gcmVjZWl2aW5nIHRoZSB2aWRlby5cbiAgICovXG4gIFRyYW5zcG9ydERlbGF5Pzogc3RyaW5nO1xufVxuIl19