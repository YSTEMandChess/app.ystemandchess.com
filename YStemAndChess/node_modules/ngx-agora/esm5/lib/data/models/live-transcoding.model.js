/**
 * @fileoverview added by tsickle
 * Generated from: lib/data/models/live-transcoding.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function LiveTranscoding() { }
if (false) {
    /**
     * Bitrate of the CDN live audio output stream in Kbps.
     * Positive integer. The default value is `48`, and the highest value is `128`.
     * @type {?}
     */
    LiveTranscoding.prototype.audioBitrate;
    /**
     * Agora’s self-defined audio channel type.
     *
     * Agora recommends choosing 1 or 2. Special players are required if you choose 3, 4 or 5:
     * 1. (Default) Mono
     * 2. Dual sound channels
     * 3. Three sound channels
     * 4. Four sound channels
     * 5. Five sound channels
     * @type {?}
     */
    LiveTranscoding.prototype.audioChannels;
    /**
     * Audio sampling rate:
     * - 32000: 32 kHz
     * - 44100: (Default) 44.1 kHz
     * - 48000: 48 kHz
     * @type {?}
     */
    LiveTranscoding.prototype.audioSampleRate;
    /**
     * The background color in RGB hex value.
     *
     * Value only, do not include a #. The default value is `0x000000`. The value range is `[0x000000, 0xffffff]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.backgroundColor;
    /**
     * Height of the video.
     *
     * Positive integer, the default value is 360. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.height;
    /**
     * - true: Low latency with unassured quality.
     * - false: (Default）High latency with assured quality.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.lowLatency;
    /**
     * Manages the user layout configuration in the CDN live streaming.
     *
     * Agora supports a maximum of 17 transcoding users in a CDN streaming channel.
     * @see [TranscodingUser](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.transcodinguser.html) for details.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.transcodingUsers;
    /**
     * Number of users; default value is 0. The maximum is 17.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.userCount;
    /**
     * Bitrate of the CDN live output video stream.
     *
     * Positive integer. The default value is 400 Kbps. The value range is `[1,1000000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoBitrate;
    /**
     * Video codec profile type:
     *
     * - 66: Baseline video codec profile. Generally used in video calls on mobile phones.
     * - 77: Main video codec profile.Generally used in mainstream electronics, such as MP4 players, portable video players, PSP, and iPads.
     * - 100: (Default) High video codec profile.Generally used in high - resolution broadcasts or television.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoCodecProfile;
    /**
     * Frame rate of the output data stream set for CDN live.
     *
     * Positive integer. The default value is 15 fps. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoFramerate;
    /**
     * Video GOP in frames. The default value is 30 frames. The value range is `[1,10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoGop;
    /**
     * Width of the video.
     *
     * Positive integer, the default value is `640`. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.width;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS10cmFuc2NvZGluZy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1hZ29yYS8iLCJzb3VyY2VzIjpbImxpYi9kYXRhL21vZGVscy9saXZlLXRyYW5zY29kaW5nLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUEscUNBa0ZDOzs7Ozs7O0lBN0VDLHVDQUFxQjs7Ozs7Ozs7Ozs7O0lBV3JCLHdDQUFpQzs7Ozs7Ozs7SUFPakMsMENBQXVDOzs7Ozs7O0lBTXZDLDBDQUF5Qjs7Ozs7OztJQU16QixpQ0FBZ0I7Ozs7OztJQUtoQixxQ0FBcUI7Ozs7Ozs7O0lBT3JCLDJDQUFxQzs7Ozs7SUFJckMsb0NBQW1COzs7Ozs7O0lBTW5CLHVDQUFzQjs7Ozs7Ozs7O0lBUXRCLDRDQUFrQzs7Ozs7OztJQU1sQyx5Q0FBd0I7Ozs7O0lBSXhCLG1DQUFrQjs7Ozs7OztJQU1sQixnQ0FBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zY29kaW5nVXNlciB9IGZyb20gJy4vdHJhbnNjb2RpbmctdXNlci5tb2RlbCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGl2ZVRyYW5zY29kaW5nIHtcbiAgLyoqXG4gICAqIEJpdHJhdGUgb2YgdGhlIENETiBsaXZlIGF1ZGlvIG91dHB1dCBzdHJlYW0gaW4gS2Jwcy5cbiAgICogUG9zaXRpdmUgaW50ZWdlci4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYDQ4YCwgYW5kIHRoZSBoaWdoZXN0IHZhbHVlIGlzIGAxMjhgLlxuICAgKi9cbiAgYXVkaW9CaXRyYXRlOiBudW1iZXI7XG4gIC8qKlxuICAgKiBBZ29yYeKAmXMgc2VsZi1kZWZpbmVkIGF1ZGlvIGNoYW5uZWwgdHlwZS5cbiAgICpcbiAgICogQWdvcmEgcmVjb21tZW5kcyBjaG9vc2luZyAxIG9yIDIuIFNwZWNpYWwgcGxheWVycyBhcmUgcmVxdWlyZWQgaWYgeW91IGNob29zZSAzLCA0IG9yIDU6XG4gICAqIDEuIChEZWZhdWx0KSBNb25vXG4gICAqIDIuIER1YWwgc291bmQgY2hhbm5lbHNcbiAgICogMy4gVGhyZWUgc291bmQgY2hhbm5lbHNcbiAgICogNC4gRm91ciBzb3VuZCBjaGFubmVsc1xuICAgKiA1LiBGaXZlIHNvdW5kIGNoYW5uZWxzXG4gICAqL1xuICBhdWRpb0NoYW5uZWxzOiAxIHwgMiB8IDMgfCA0IHwgNTtcbiAgLyoqXG4gICAqIEF1ZGlvIHNhbXBsaW5nIHJhdGU6XG4gICAqIC0gMzIwMDA6IDMyIGtIelxuICAgKiAtIDQ0MTAwOiAoRGVmYXVsdCkgNDQuMSBrSHpcbiAgICogLSA0ODAwMDogNDgga0h6XG4gICAqL1xuICBhdWRpb1NhbXBsZVJhdGU6IDMyMDAwIHwgNDQxMDAgfCA0ODAwMDtcbiAgLyoqXG4gICAqIFRoZSBiYWNrZ3JvdW5kIGNvbG9yIGluIFJHQiBoZXggdmFsdWUuXG4gICAqXG4gICAqIFZhbHVlIG9ubHksIGRvIG5vdCBpbmNsdWRlIGEgIy4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgYDB4MDAwMDAwYC4gVGhlIHZhbHVlIHJhbmdlIGlzIGBbMHgwMDAwMDAsIDB4ZmZmZmZmXWAuXG4gICAqL1xuICBiYWNrZ3JvdW5kQ29sb3I/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBIZWlnaHQgb2YgdGhlIHZpZGVvLlxuICAgKlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyAzNjAuIFRoZSB2YWx1ZSByYW5nZSBpcyBgWzEsIDEwMDAwXWAuXG4gICAqL1xuICBoZWlnaHQ/OiBudW1iZXI7XG4gIC8qKlxuICAgKiAtIHRydWU6IExvdyBsYXRlbmN5IHdpdGggdW5hc3N1cmVkIHF1YWxpdHkuXG4gICAqIC0gZmFsc2U6IChEZWZhdWx077yJSGlnaCBsYXRlbmN5IHdpdGggYXNzdXJlZCBxdWFsaXR5LlxuICAgKi9cbiAgbG93TGF0ZW5jeT86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBNYW5hZ2VzIHRoZSB1c2VyIGxheW91dCBjb25maWd1cmF0aW9uIGluIHRoZSBDRE4gbGl2ZSBzdHJlYW1pbmcuXG4gICAqXG4gICAqIEFnb3JhIHN1cHBvcnRzIGEgbWF4aW11bSBvZiAxNyB0cmFuc2NvZGluZyB1c2VycyBpbiBhIENETiBzdHJlYW1pbmcgY2hhbm5lbC5cbiAgICogQHNlZSBbVHJhbnNjb2RpbmdVc2VyXShodHRwczovL2RvY3MuYWdvcmEuaW8vZW4vVmlkZW8vQVBJJTIwUmVmZXJlbmNlL3dlYi9pbnRlcmZhY2VzL2Fnb3JhcnRjLnRyYW5zY29kaW5ndXNlci5odG1sKSBmb3IgZGV0YWlscy5cbiAgICovXG4gIHRyYW5zY29kaW5nVXNlcnM/OiBUcmFuc2NvZGluZ1VzZXJbXTtcbiAgLyoqXG4gICAqIE51bWJlciBvZiB1c2VyczsgZGVmYXVsdCB2YWx1ZSBpcyAwLiBUaGUgbWF4aW11bSBpcyAxNy5cbiAgICovXG4gIHVzZXJDb3VudD86IG51bWJlcjtcbiAgLyoqXG4gICAqIEJpdHJhdGUgb2YgdGhlIENETiBsaXZlIG91dHB1dCB2aWRlbyBzdHJlYW0uXG4gICAqXG4gICAqIFBvc2l0aXZlIGludGVnZXIuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDQwMCBLYnBzLiBUaGUgdmFsdWUgcmFuZ2UgaXMgYFsxLDEwMDAwMDBdYC5cbiAgICovXG4gIHZpZGVvQml0cmF0ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFZpZGVvIGNvZGVjIHByb2ZpbGUgdHlwZTpcbiAgICpcbiAgICogLSA2NjogQmFzZWxpbmUgdmlkZW8gY29kZWMgcHJvZmlsZS4gR2VuZXJhbGx5IHVzZWQgaW4gdmlkZW8gY2FsbHMgb24gbW9iaWxlIHBob25lcy5cbiAgICogLSA3NzogTWFpbiB2aWRlbyBjb2RlYyBwcm9maWxlLkdlbmVyYWxseSB1c2VkIGluIG1haW5zdHJlYW0gZWxlY3Ryb25pY3MsIHN1Y2ggYXMgTVA0IHBsYXllcnMsIHBvcnRhYmxlIHZpZGVvIHBsYXllcnMsIFBTUCwgYW5kIGlQYWRzLlxuICAgKiAtIDEwMDogKERlZmF1bHQpIEhpZ2ggdmlkZW8gY29kZWMgcHJvZmlsZS5HZW5lcmFsbHkgdXNlZCBpbiBoaWdoIC0gcmVzb2x1dGlvbiBicm9hZGNhc3RzIG9yIHRlbGV2aXNpb24uXG4gICAqL1xuICB2aWRlb0NvZGVjUHJvZmlsZT86IDY2IHwgNzcgfCAxMDA7XG4gIC8qKlxuICAgKiBGcmFtZSByYXRlIG9mIHRoZSBvdXRwdXQgZGF0YSBzdHJlYW0gc2V0IGZvciBDRE4gbGl2ZS5cbiAgICpcbiAgICogUG9zaXRpdmUgaW50ZWdlci4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgMTUgZnBzLiBUaGUgdmFsdWUgcmFuZ2UgaXMgYFsxLCAxMDAwMF1gLlxuICAgKi9cbiAgdmlkZW9GcmFtZXJhdGU/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBWaWRlbyBHT1AgaW4gZnJhbWVzLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAzMCBmcmFtZXMuIFRoZSB2YWx1ZSByYW5nZSBpcyBgWzEsMTAwMDBdYC5cbiAgICovXG4gIHZpZGVvR29wPzogbnVtYmVyO1xuICAvKipcbiAgICogV2lkdGggb2YgdGhlIHZpZGVvLlxuICAgKlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyBgNjQwYC4gVGhlIHZhbHVlIHJhbmdlIGlzIGBbMSwgMTAwMDBdYC5cbiAgICovXG4gIHdpZHRoPzogbnVtYmVyO1xufVxuIl19