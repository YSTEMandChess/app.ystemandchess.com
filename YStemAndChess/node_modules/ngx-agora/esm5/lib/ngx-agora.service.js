/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-agora.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable } from '@angular/core';
import * as agoraSDK from 'agora-rtc-sdk';
import * as i0 from "@angular/core";
/**
 * Provides access to the Agora web API, including the AgoraRTC and Client objects.
 */
var NgxAgoraService = /** @class */ (function () {
    function NgxAgoraService(config) {
        this.config = config;
        /**
         * All audio devices collected from the AgoraRTC `getDevices()` method.
         * @see [getDevices()](https://docs.agora.io/en/Video/API%20Reference/web/globals.html#getdevices)
         *
         */
        this.audioDevices = [];
        /**
         * All video devices collected from the AgoraRTC `getDevices()` method.
         * @see [getDevices()](https://docs.agora.io/en/Video/API%20Reference/web/globals.html#getdevices)
         */
        this.videoDevices = [];
        /**
         * Instance reference to the `static` AgoraRTC library object.
         */
        this.AgoraRTC = NgxAgoraService.AgoraRTC;
        if (!this.checkSystemRequirements()) {
            this.AgoraRTC.Logger.error('Web RTC is not supported in this browser');
        }
        else {
            this.collectDevices();
        }
    }
    /**
     * Checks the Web Browser Compatibility
     *
     * This method checks the compatibility between the Web SDK and the current web browser.
     * Use this method before calling createClient to check the compatibility between the system and the web browser.
     *
     * - true: The Web SDK is compatible with the current web browser.
     * - false: The Web SDK is not compatible with the current web browser.
     *
     * @remark
     * Agora has yet to conduct comprehensive tests on Chromium kernel browsers, such as QQ and 360.
     * Agora will gradually achieve compatibility on most mainstream browsers in subsequent versions of the Web SDK.
     */
    /**
     * Checks the Web Browser Compatibility
     *
     * This method checks the compatibility between the Web SDK and the current web browser.
     * Use this method before calling createClient to check the compatibility between the system and the web browser.
     *
     * - true: The Web SDK is compatible with the current web browser.
     * - false: The Web SDK is not compatible with the current web browser.
     *
     * \@remark
     * Agora has yet to conduct comprehensive tests on Chromium kernel browsers, such as QQ and 360.
     * Agora will gradually achieve compatibility on most mainstream browsers in subsequent versions of the Web SDK.
     * @return {?}
     */
    NgxAgoraService.prototype.checkSystemRequirements = /**
     * Checks the Web Browser Compatibility
     *
     * This method checks the compatibility between the Web SDK and the current web browser.
     * Use this method before calling createClient to check the compatibility between the system and the web browser.
     *
     * - true: The Web SDK is compatible with the current web browser.
     * - false: The Web SDK is not compatible with the current web browser.
     *
     * \@remark
     * Agora has yet to conduct comprehensive tests on Chromium kernel browsers, such as QQ and 360.
     * Agora will gradually achieve compatibility on most mainstream browsers in subsequent versions of the Web SDK.
     * @return {?}
     */
    function () {
        return this.AgoraRTC.checkSystemRequirements();
    };
    /**
     * Creates a Client object.
     *
     * This method creates and returns a client object. You can only call this method once each call session.
     *
     * @param config
     * Defines the property of the client, see
     * [ClientConfig](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html) for details.
     * @param [autoInitializing=true] Ngx-agora by default automatically initializes the client with the provided `AppID` after it is created.
     * Set this property to `false` to disable this functionality, if you are going to call `init()` separately
     * (after creating the client only).
     * @param [onSuccess] The callback when the method succeeds.
     * @param [onFailure] The callback when the method fails.
     *
     * @example
     * AgoraRTC.createClient(config);
     */
    /**
     * Creates a Client object.
     *
     * This method creates and returns a client object. You can only call this method once each call session.
     *
     * \@example
     * AgoraRTC.createClient(config);
     * @param {?} config
     * Defines the property of the client, see
     * [ClientConfig](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html) for details.
     * @param {?=} autoInitializing
     * @param {?=} onSuccess
     * @param {?=} onFailure
     * @return {?}
     */
    NgxAgoraService.prototype.createClient = /**
     * Creates a Client object.
     *
     * This method creates and returns a client object. You can only call this method once each call session.
     *
     * \@example
     * AgoraRTC.createClient(config);
     * @param {?} config
     * Defines the property of the client, see
     * [ClientConfig](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html) for details.
     * @param {?=} autoInitializing
     * @param {?=} onSuccess
     * @param {?=} onFailure
     * @return {?}
     */
    function (config, autoInitializing, onSuccess, onFailure) {
        if (autoInitializing === void 0) { autoInitializing = true; }
        this.client = this.AgoraRTC.createClient(config);
        if (autoInitializing) {
            this.init(this.config.AppID, onSuccess, onFailure);
        }
        return this.client;
    };
    /**
     * This method creates and returns a stream object.
     *
     * @example
     * AgoraRTC.createStream(spec)
     *
     * @param spec Defines the properties of the stream
     * @see [StreamSpec](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.streamspec.html) for details.
     */
    /**
     * This method creates and returns a stream object.
     *
     * \@example
     * AgoraRTC.createStream(spec)
     *
     * @see [StreamSpec](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.streamspec.html) for details.
     * @param {?} spec Defines the properties of the stream
     * @return {?}
     */
    NgxAgoraService.prototype.createStream = /**
     * This method creates and returns a stream object.
     *
     * \@example
     * AgoraRTC.createStream(spec)
     *
     * @see [StreamSpec](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.streamspec.html) for details.
     * @param {?} spec Defines the properties of the stream
     * @return {?}
     */
    function (spec) {
        if (!spec.microphoneId && this.audioDevices && this.audioDevices.length) {
            /** @type {?} */
            var defaultMic = this.audioDevices[0].deviceId;
            spec.microphoneId = defaultMic;
        }
        if (!spec.cameraId && this.videoDevices && this.videoDevices.length) {
            /** @type {?} */
            var defaultCamera = this.videoDevices[0].deviceId;
            spec.cameraId = spec.cameraId || defaultCamera;
        }
        return this.AgoraRTC.createStream(spec);
    };
    /**
     * Initializes the Client object.
     *
     * @param appId Pass in the App ID for your project.
     * ASCII characters only, and the string length must be greater than 0 and less than 256 bytes.
     * To get your App ID,
     * @see [Get an App ID](https://docs.agora.io/en/Video/web_prepare?platform=Web#create-an-agora-account-and-get-an-app-id).
     * @param [onSuccess] The callback when the method succeeds.
     * @param [onFailure] The callback when the method fails.
     *
     * @example
     * this.ngxAgoraService.client.init(appId, () => {
     * console.log("client initialized");
     * // Join a channel
     * //……
     * }, error => {
     *     console.log("client init failed ", err);
     *     // Error handling
     * });
     */
    /**
     * Initializes the Client object.
     *
     * @see [Get an App ID](https://docs.agora.io/en/Video/web_prepare?platform=Web#create-an-agora-account-and-get-an-app-id).
     * \@example
     * this.ngxAgoraService.client.init(appId, () => {
     * console.log("client initialized");
     * // Join a channel
     * //……
     * }, error => {
     *     console.log("client init failed ", err);
     *     // Error handling
     * });
     * @param {?} appId Pass in the App ID for your project.
     * ASCII characters only, and the string length must be greater than 0 and less than 256 bytes.
     * To get your App ID,
     * @param {?=} onSuccess
     * @param {?=} onFailure
     * @return {?}
     */
    NgxAgoraService.prototype.init = /**
     * Initializes the Client object.
     *
     * @see [Get an App ID](https://docs.agora.io/en/Video/web_prepare?platform=Web#create-an-agora-account-and-get-an-app-id).
     * \@example
     * this.ngxAgoraService.client.init(appId, () => {
     * console.log("client initialized");
     * // Join a channel
     * //……
     * }, error => {
     *     console.log("client init failed ", err);
     *     // Error handling
     * });
     * @param {?} appId Pass in the App ID for your project.
     * ASCII characters only, and the string length must be greater than 0 and less than 256 bytes.
     * To get your App ID,
     * @param {?=} onSuccess
     * @param {?=} onFailure
     * @return {?}
     */
    function (appId, onSuccess, onFailure) {
        this.client.init(appId, onSuccess, onFailure);
    };
    /**
     * Attempts to automatically collect audio and video devices from the AgoraRTC `getDevices()` method.
     */
    /**
     * Attempts to automatically collect audio and video devices from the AgoraRTC `getDevices()` method.
     * @private
     * @return {?}
     */
    NgxAgoraService.prototype.collectDevices = /**
     * Attempts to automatically collect audio and video devices from the AgoraRTC `getDevices()` method.
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.AgoraRTC.getDevices((/**
         * @param {?} devices
         * @return {?}
         */
        function (devices) {
            /** @type {?} */
            var audioDevices = devices.filter((/**
             * @param {?} device
             * @return {?}
             */
            function (device) {
                return device.kind === 'audioinput' && device.deviceId !== 'default';
            }));
            /** @type {?} */
            var videoDevices = devices.filter((/**
             * @param {?} device
             * @return {?}
             */
            function (device) {
                return device.kind === 'videoinput' && device.deviceId !== 'default';
            }));
            _this.audioDevices = audioDevices;
            _this.videoDevices = videoDevices;
        }));
    };
    NgxAgoraService.AgoraRTC = agoraSDK;
    NgxAgoraService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgxAgoraService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: ['config',] }] }
    ]; };
    /** @nocollapse */ NgxAgoraService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgxAgoraService_Factory() { return new NgxAgoraService(i0.ɵɵinject("config")); }, token: NgxAgoraService, providedIn: "root" });
    return NgxAgoraService;
}());
export { NgxAgoraService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxAgoraService.AgoraRTC;
    /**
     * The local Agora.io Client object.
     * @see [Web Client](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.client.html)
     * @type {?}
     */
    NgxAgoraService.prototype.client;
    /**
     * All audio devices collected from the AgoraRTC `getDevices()` method.
     * @see [getDevices()](https://docs.agora.io/en/Video/API%20Reference/web/globals.html#getdevices)
     *
     * @type {?}
     */
    NgxAgoraService.prototype.audioDevices;
    /**
     * All video devices collected from the AgoraRTC `getDevices()` method.
     * @see [getDevices()](https://docs.agora.io/en/Video/API%20Reference/web/globals.html#getdevices)
     * @type {?}
     */
    NgxAgoraService.prototype.videoDevices;
    /**
     * Instance reference to the `static` AgoraRTC library object.
     * @type {?}
     */
    NgxAgoraService.prototype.AgoraRTC;
    /**
     * @type {?}
     * @private
     */
    NgxAgoraService.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,