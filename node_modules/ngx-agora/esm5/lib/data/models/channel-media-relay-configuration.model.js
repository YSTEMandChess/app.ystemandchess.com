/**
 * @fileoverview added by tsickle
 * Generated from: lib/data/models/channel-media-relay-configuration.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Configurations of the media stream relay.
 *
 * \@description
 * Use this interface to set the media stream relay when calling
 * [startChannelMediaRelay](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.client.html#startchannelmediarelay)
 * or [updateChannelMediaRelay](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.client.html#updatechannelmediarelay).
 *
 * \@since 3.0.0
 * @record
 */
export function ChannelMediaRelayConfiguration() { }
if (false) {
    /**
     * Removes the destination channel.
     *
     * \@example
     * configuration.removeDestChannelInfo("cname")
     * @type {?}
     */
    ChannelMediaRelayConfiguration.prototype.removeDestChannelInfo;
    /**
     * Sets the information of the destination channel.
     *
     * To relay a media stream across multiple channels, call this method as many times (to a maximum of four).
     *
     * \@example
     * var configuration = new AgoraRTC.ChannelMediaRelayConfiguration();
     *    configuration.setDestChannelInfo("cname", {
     *     channelName: "destChannel",
     *     uid: 123,
     *     token: "yourDestToken",
     *  })
     *
     * \@param channelName The name of the destination channel.
     * Ensure that the value of this parameter is the same as the value of `channelName` in `destInfo`.
     * \@param destInfo The information of the destination channel
     *
     * @type {?}
     */
    ChannelMediaRelayConfiguration.prototype.setDestChannelInfo;
    /**
     * Sets the information of the source channel.
     *
     * \@example
     * var configuration = new AgoraRTC.ChannelMediaRelayConfiguration();
     * configuration.setSrcChannelInfo({
     *  channelName: "srcChannel",
     *  uid: 123,
     *  token: "yourSrcToken",
     * })
     * @type {?}
     */
    ChannelMediaRelayConfiguration.prototype.setSrcChannelInfo;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbm5lbC1tZWRpYS1yZWxheS1jb25maWd1cmF0aW9uLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFnb3JhLyIsInNvdXJjZXMiOlsibGliL2RhdGEvbW9kZWxzL2NoYW5uZWwtbWVkaWEtcmVsYXktY29uZmlndXJhdGlvbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsb0RBMENDOzs7Ozs7Ozs7SUFuQ0MsK0RBQXFEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1CckQsNERBR1U7Ozs7Ozs7Ozs7Ozs7SUFZViwyREFBd0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZXN0aW5hdGlvbkNoYW5uZWxJbmZvLFxuICBTb3VyY2VDaGFubmVsSW5mbyxcbn0gZnJvbSAnLi9jaGFubmVsLWluZm8ubW9kZWwnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb25zIG9mIHRoZSBtZWRpYSBzdHJlYW0gcmVsYXkuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBVc2UgdGhpcyBpbnRlcmZhY2UgdG8gc2V0IHRoZSBtZWRpYSBzdHJlYW0gcmVsYXkgd2hlbiBjYWxsaW5nXG4gKiBbc3RhcnRDaGFubmVsTWVkaWFSZWxheV0oaHR0cHM6Ly9kb2NzLmFnb3JhLmlvL2VuL1ZpZGVvL0FQSSUyMFJlZmVyZW5jZS93ZWIvaW50ZXJmYWNlcy9hZ29yYXJ0Yy5jbGllbnQuaHRtbCNzdGFydGNoYW5uZWxtZWRpYXJlbGF5KVxuICogb3IgW3VwZGF0ZUNoYW5uZWxNZWRpYVJlbGF5XShodHRwczovL2RvY3MuYWdvcmEuaW8vZW4vVmlkZW8vQVBJJTIwUmVmZXJlbmNlL3dlYi9pbnRlcmZhY2VzL2Fnb3JhcnRjLmNsaWVudC5odG1sI3VwZGF0ZWNoYW5uZWxtZWRpYXJlbGF5KS5cbiAqXG4gKiBAc2luY2UgMy4wLjBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDaGFubmVsTWVkaWFSZWxheUNvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogUmVtb3ZlcyB0aGUgZGVzdGluYXRpb24gY2hhbm5lbC5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uZmlndXJhdGlvbi5yZW1vdmVEZXN0Q2hhbm5lbEluZm8oXCJjbmFtZVwiKVxuICAgKi9cbiAgcmVtb3ZlRGVzdENoYW5uZWxJbmZvOiAoY2hhbm5lbE5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgLyoqXG4gICAqIFNldHMgdGhlIGluZm9ybWF0aW9uIG9mIHRoZSBkZXN0aW5hdGlvbiBjaGFubmVsLlxuICAgKlxuICAgKiBUbyByZWxheSBhIG1lZGlhIHN0cmVhbSBhY3Jvc3MgbXVsdGlwbGUgY2hhbm5lbHMsIGNhbGwgdGhpcyBtZXRob2QgYXMgbWFueSB0aW1lcyAodG8gYSBtYXhpbXVtIG9mIGZvdXIpLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB2YXIgY29uZmlndXJhdGlvbiA9IG5ldyBBZ29yYVJUQy5DaGFubmVsTWVkaWFSZWxheUNvbmZpZ3VyYXRpb24oKTtcbiAgICogICAgY29uZmlndXJhdGlvbi5zZXREZXN0Q2hhbm5lbEluZm8oXCJjbmFtZVwiLCB7XG4gICAqICAgICBjaGFubmVsTmFtZTogXCJkZXN0Q2hhbm5lbFwiLFxuICAgKiAgICAgdWlkOiAxMjMsXG4gICAqICAgICB0b2tlbjogXCJ5b3VyRGVzdFRva2VuXCIsXG4gICAqICB9KVxuICAgKlxuICAgKiBAcGFyYW0gY2hhbm5lbE5hbWUgVGhlIG5hbWUgb2YgdGhlIGRlc3RpbmF0aW9uIGNoYW5uZWwuXG4gICAqIEVuc3VyZSB0aGF0IHRoZSB2YWx1ZSBvZiB0aGlzIHBhcmFtZXRlciBpcyB0aGUgc2FtZSBhcyB0aGUgdmFsdWUgb2YgYGNoYW5uZWxOYW1lYCBpbiBgZGVzdEluZm9gLlxuICAgKiBAcGFyYW0gZGVzdEluZm8gVGhlIGluZm9ybWF0aW9uIG9mIHRoZSBkZXN0aW5hdGlvbiBjaGFubmVsXG4gICAqXG4gICAqL1xuICBzZXREZXN0Q2hhbm5lbEluZm86IChcbiAgICBjaGFubmVsTmFtZTogc3RyaW5nLFxuICAgIGRlc3RJbmZvOiBEZXN0aW5hdGlvbkNoYW5uZWxJbmZvXG4gICkgPT4gdm9pZDtcbiAgLyoqXG4gICAqIFNldHMgdGhlIGluZm9ybWF0aW9uIG9mIHRoZSBzb3VyY2UgY2hhbm5lbC5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogdmFyIGNvbmZpZ3VyYXRpb24gPSBuZXcgQWdvcmFSVEMuQ2hhbm5lbE1lZGlhUmVsYXlDb25maWd1cmF0aW9uKCk7XG4gICAqIGNvbmZpZ3VyYXRpb24uc2V0U3JjQ2hhbm5lbEluZm8oe1xuICAgKiAgY2hhbm5lbE5hbWU6IFwic3JjQ2hhbm5lbFwiLFxuICAgKiAgdWlkOiAxMjMsXG4gICAqICB0b2tlbjogXCJ5b3VyU3JjVG9rZW5cIixcbiAgICogfSlcbiAgICovXG4gIHNldFNyY0NoYW5uZWxJbmZvOiAoc3JjSW5mbzogU291cmNlQ2hhbm5lbEluZm8pID0+IHZvaWQ7XG59XG4iXX0=