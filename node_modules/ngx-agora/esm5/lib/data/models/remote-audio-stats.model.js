/**
 * @fileoverview added by tsickle
 * Generated from: lib/data/models/remote-audio-stats.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function RemoteAudioStats() { }
if (false) {
    /**
     * Decoding type of the received audio.
     *
     * - "1": Opus.
     * - "2": AAC.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.CodecType;
    /**
     * End-to-end delay in ms.
     *
     * Delay from capturing to playing the audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.End2EndDelay;
    /**
     * Whether the audio is muted or not.
     * - "1": Muted.
     * - "0": Unmuted.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.MuteState;
    /**
     * Packet loss rate (%) of the remote audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.PacketLossRate;
    /**
     * Bitrate of the received audio, in Kbps.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.RecvBitrate;
    /**
     * Volume of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.RecvLevel;
    /**
     * Total freeze time of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TotalFreezeTime;
    /**
     * Total playing duration of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TotalPlayDuration;
    /**
     * Transport delay in ms.
     *
     * Delay from sending to receiving the audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TransportDelay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWF1ZGlvLXN0YXRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFnb3JhLyIsInNvdXJjZXMiOlsibGliL2RhdGEvbW9kZWxzL3JlbW90ZS1hdWRpby1zdGF0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNDQW9DQzs7Ozs7Ozs7O0lBN0JDLHFDQUFtQjs7Ozs7OztJQU1uQix3Q0FBc0I7Ozs7Ozs7SUFNdEIscUNBQW1COzs7OztJQUVuQiwwQ0FBd0I7Ozs7O0lBRXhCLHVDQUFxQjs7Ozs7SUFFckIscUNBQW1COzs7OztJQUVuQiwyQ0FBeUI7Ozs7O0lBRXpCLDZDQUEyQjs7Ozs7OztJQU0zQiwwQ0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFJlbW90ZUF1ZGlvU3RhdHMge1xuICAvKipcbiAgICogRGVjb2RpbmcgdHlwZSBvZiB0aGUgcmVjZWl2ZWQgYXVkaW8uXG4gICAqXG4gICAqIC0gXCIxXCI6IE9wdXMuXG4gICAqIC0gXCIyXCI6IEFBQy5cbiAgICovXG4gIENvZGVjVHlwZT86IHN0cmluZztcbiAgLyoqXG4gICAqIEVuZC10by1lbmQgZGVsYXkgaW4gbXMuXG4gICAqXG4gICAqIERlbGF5IGZyb20gY2FwdHVyaW5nIHRvIHBsYXlpbmcgdGhlIGF1ZGlvLlxuICAgKi9cbiAgRW5kMkVuZERlbGF5Pzogc3RyaW5nO1xuICAvKipcbiAgICogV2hldGhlciB0aGUgYXVkaW8gaXMgbXV0ZWQgb3Igbm90LlxuICAgKiAtIFwiMVwiOiBNdXRlZC5cbiAgICogLSBcIjBcIjogVW5tdXRlZC5cbiAgICovXG4gIE11dGVTdGF0ZT86IHN0cmluZztcbiAgLyoqIFBhY2tldCBsb3NzIHJhdGUgKCUpIG9mIHRoZSByZW1vdGUgYXVkaW8uICovXG4gIFBhY2tldExvc3NSYXRlPzogc3RyaW5nO1xuICAvKiogQml0cmF0ZSBvZiB0aGUgcmVjZWl2ZWQgYXVkaW8sIGluIEticHMuICovXG4gIFJlY3ZCaXRyYXRlPzogc3RyaW5nO1xuICAvKiogVm9sdW1lIG9mIHRoZSByZWNlaXZlZCBhdWRpby4gKi9cbiAgUmVjdkxldmVsPzogc3RyaW5nO1xuICAvKiogVG90YWwgZnJlZXplIHRpbWUgb2YgdGhlIHJlY2VpdmVkIGF1ZGlvLiAqL1xuICBUb3RhbEZyZWV6ZVRpbWU/OiBzdHJpbmc7XG4gIC8qKiBUb3RhbCBwbGF5aW5nIGR1cmF0aW9uIG9mIHRoZSByZWNlaXZlZCBhdWRpby4gKi9cbiAgVG90YWxQbGF5RHVyYXRpb24/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUcmFuc3BvcnQgZGVsYXkgaW4gbXMuXG4gICAqXG4gICAqIERlbGF5IGZyb20gc2VuZGluZyB0byByZWNlaXZpbmcgdGhlIGF1ZGlvLlxuICAgKi9cbiAgVHJhbnNwb3J0RGVsYXk/OiBzdHJpbmc7XG59XG4iXX0=