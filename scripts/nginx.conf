user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
}

http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        gzip on;

        map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }

        upstream cclient {
                server chessclient:80;
        }

        upstream cserver {
                server chessserver:3000;
        }

        upstream sserver {
                server stockfishserver:8080;
        }

        server {
                root /var/www/html;


                index index.html index.htm index.nginx-debian.html;
    
                #add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;

                location / {
                    proxy_pass http://ystemandchess:80;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                }

                location ~ /chessclient {
                    rewrite ^/chessclient(.*)$ /$1 break;
                    proxy_pass http://cclient;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    add_header 'Access-Control-Allow-Origin' '*';
                }

                location /socket.io/ {
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Host $http_host;
                    proxy_set_header X-NginX-Proxy false;

                    proxy_pass http://cserver;
                    proxy_redirect off;

                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_read_timeout 300s;
                    proxy_connect_timeout 75s;
                }

                location ~ /chessserver {
                    #rewrite ^/chessserver(.*)$ /$1 break;

                    proxy_pass http://cserver;

                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection $connection_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_read_timeout 300;
                    proxy_connect_timeout 300;

                    proxy_http_version 1.1;
                }

                location ~ /middleware {
                    rewrite ^/middleware(.*)$ /$1  break;
                    proxy_pass http://middleware:8000;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                }

                location ~ /stockfishserver {
                    proxy_pass http://sserver;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                }

                error_page  405     =200 $uri;
        }

server {
        listen 80 ;
        listen [::]:80 ;
        return 301 http://localhost$request_uri; # managed by Certbot
        }
}
